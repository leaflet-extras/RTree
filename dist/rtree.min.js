/****************************************************************************** 
rtree.js -Non-Recursive Javascript R-Tree Library
Version 1.0.0, March 15th 2013

https://github.com/leaflet-extras/RTree.
******************************************************************************/
!function(){"use strict";var a=function(b){var c=3,d=6;isNaN(b)||(c=Math.floor(b/2),d=b);var e={x:0,y:0,w:0,h:0,id:"root",nodes:[]},f=function(a){return"[object Array]"===Object.prototype.toString.call(a)},g=function(){var a={};return function(b){var c=0;return b in a?c=a[b]++:a[b]=0,b+"_"+c}}();a.Rectangle.squarifiedRatio=function(a,b,c){var d=(a+b)/2,e=a*b,f=e/(d*d);return e*c/f};var h=function(b,d,e){var f,g,h,i=[],j=[],k=[],l=1;if(!b||!a.Rectangle.overlapRectangle(b,e))return k;var m={x:b.x,y:b.y,w:b.w,h:b.h,target:d};j.push(e.nodes.length),i.push(e);do{if(f=i.pop(),g=j.pop()-1,"target"in m)for(;g>=0;){if(h=f.nodes[g],a.Rectangle.overlapRectangle(m,h)){if(m.target&&"leaf"in h&&h.leaf===m.target||!m.target&&("leaf"in h||a.Rectangle.containsRectangle(h,m))){"nodes"in h?(k=n(h,!0,[],h),f.nodes.splice(g,1)):k=f.nodes.splice(g,1),a.Rectangle.makeMBR(f.nodes,f),delete m.target;break}"nodes"in h&&(l++,j.push(g),i.push(f),f=h,g=h.nodes.length)}g--}else if("nodes"in m){f.nodes.splice(g+1,1),f.nodes.length>0&&a.Rectangle.makeMBR(f.nodes,f);for(var p=0;p<m.nodes.length;p++)o(m.nodes[p],f);m.nodes=[],0===i.length&&f.nodes.length<=1?(m.nodes=n(f,!0,m.nodes,f),f.nodes=[],i.push(f),j.push(1)):i.length>0&&f.nodes.length<c?(m.nodes=n(f,!0,m.nodes,f),f.nodes=[]):delete m.nodes}else a.Rectangle.makeMBR(f.nodes,f);l-=1}while(i.length>0);return k},i=function(b,c){var d,e=-1,f=[];f.push(c);var g=c.nodes;do{-1!==e&&(f.push(g[e]),g=g[e].nodes,e=-1);for(var h=g.length-1;h>=0;h--){var i=g[h];if("leaf"in i){e=-1;break}var j=a.Rectangle.squarifiedRatio(i.w,i.h,i.nodes.length+1),k=Math.max(i.x+i.w,b.x+b.w)-Math.min(i.x,b.x),l=Math.max(i.y+i.h,b.y+b.h)-Math.min(i.y,b.y),m=a.Rectangle.squarifiedRatio(k,l,i.nodes.length+2);(0>e||Math.abs(m-j)<d)&&(d=Math.abs(m-j),e=h)}}while(-1!==e);return f},j=function(a){for(var b=l(a);a.length>0;)k(a,b[0],b[1]);return b},k=function(b,d,e){for(var f,g,h,i=a.Rectangle.squarifiedRatio(d.w,d.h,d.nodes.length+1),j=a.Rectangle.squarifiedRatio(e.w,e.h,e.nodes.length+1),k=b.length-1;k>=0;k--){var l=b[k],m={};m.x=Math.min(d.x,l.x),m.y=Math.min(d.y,l.y),m.w=Math.max(d.x+d.w,l.x+l.w)-m.x,m.h=Math.max(d.y+d.h,l.y+l.h)-m.y;var n=Math.abs(a.Rectangle.squarifiedRatio(m.w,m.h,d.nodes.length+2)-i),o={};o.x=Math.min(e.x,l.x),o.y=Math.min(e.y,l.y),o.w=Math.max(e.x+e.w,l.x+l.w)-o.x,o.h=Math.max(e.y+e.h,l.y+l.h)-o.y;var p=Math.abs(a.Rectangle.squarifiedRatio(o.w,o.h,e.nodes.length+2)-j);(!g||!f||Math.abs(p-n)<f)&&(g=k,f=Math.abs(p-n),h=n>p?e:d)}var q=b.splice(g,1)[0];d.nodes.length+b.length+1<=c?(d.nodes.push(q),a.Rectangle.expandRectangle(d,q)):e.nodes.length+b.length+1<=c?(e.nodes.push(q),a.Rectangle.expandRectangle(e,q)):(h.nodes.push(q),a.Rectangle.expandRectangle(h,q))},l=function(a){for(var b,c,d=a.length-1,e=0,f=a.length-1,g=0,h=a.length-2;h>=0;h--){var i=a[h];i.x>a[e].x?e=h:i.x+i.w<a[d].x+a[d].w&&(d=h),i.y>a[g].y?g=h:i.y+i.h<a[f].y+a[f].h&&(f=h)}var j=Math.abs(a[d].x+a[d].w-a[e].x),k=Math.abs(a[f].y+a[f].h-a[g].y);return j>k?d>e?(b=a.splice(d,1)[0],c=a.splice(e,1)[0]):(c=a.splice(e,1)[0],b=a.splice(d,1)[0]):f>g?(b=a.splice(f,1)[0],c=a.splice(g,1)[0]):(c=a.splice(g,1)[0],b=a.splice(f,1)[0]),[{x:b.x,y:b.y,w:b.w,h:b.h,nodes:[b]},{x:c.x,y:c.y,w:c.w,h:c.h,nodes:[c]}]},m=function(a,b){return a.nodes=b.nodes,a.x=b.x,a.y=b.y,a.w=b.w,a.h=b.h,a},n=function(b,c,d,e){var f=[];if(!a.Rectangle.overlapRectangle(b,e))return d;f.push(e.nodes);do for(var g=f.pop(),h=g.length-1;h>=0;h--){var i=g[h];a.Rectangle.overlapRectangle(b,i)&&("nodes"in i?f.push(i.nodes):"leaf"in i&&(c?d.push(i):d.push(i.leaf)))}while(f.length>0);return d},o=function(b,c){var e;if(0===c.nodes.length)return c.x=b.x,c.y=b.y,c.w=b.w,c.h=b.h,c.nodes.push(b),void 0;var g,h=i(b,c),k=b;do{if(e&&"nodes"in e&&0===e.nodes.length){g=e,e=h.pop();for(var l=0;l<e.nodes.length;l++)if(e.nodes[l]===g||0===e.nodes[l].nodes.length){e.nodes.splice(l,1);break}}else e=h.pop();if("leaf"in k||"nodes"in k||f(k)){if(f(k)){for(var m=0;m<k.length;m++)a.Rectangle.expandRectangle(e,k[m]);e.nodes=e.nodes.concat(k)}else a.Rectangle.expandRectangle(e,k),e.nodes.push(k);if(e.nodes.length<=d)k={x:e.x,y:e.y,w:e.w,h:e.h};else{var n=j(e.nodes);k=n,h.length<1&&(e.nodes.push(n[0]),h.push(e),k=n[1])}}else a.Rectangle.expandRectangle(e,k),k={x:e.x,y:e.y,w:e.w,h:e.h}}while(h.length>0)};this.getTree=function(){return e},this.setTree=function(a,b){return b||(b=e),m(b,a)},this.search=function(a,b,c,d){return"function"==typeof b?(d=b,b=!1,c=[]):"function"==typeof c&&(d=c,c=[]),c=c||[],d?(d(null,n(a,b,c,e)),void 0):n(a,b,c,e)},this.toJSON=function(b,c){var d=[],f=[],h={},i=3,j=1,k="";if(b&&!a.Rectangle.overlapRectangle(b,e))return"";c?(i+=4,f.push(c.nodes.length),d.push(c.nodes),k+="var mainTree = {x:"+c.x.toFixed()+",y:"+c.y.toFixed()+",w:"+c.w.toFixed()+",h:"+c.h.toFixed()+",nodes:["):(f.push(e.nodes.length),d.push(e.nodes),k+="var mainTree = {x:"+e.x.toFixed()+",y:"+e.y.toFixed()+",w:"+e.w.toFixed()+",h:"+e.h.toFixed()+",nodes:[");do{var l=d.pop(),m=f.pop()-1;for(m>=0&&m<l.length-1&&(k+=",");m>=0;){var n=l[m];if(!b||a.Rectangle.overlapRectangle(b,n))if(n.nodes)if(j>=i){var o=g("savedSubtree");k+="{x:"+n.x.toFixed()+",y:"+n.y.toFixed()+",w:"+n.w.toFixed()+",h:"+n.h.toFixed()+',load:"'+o+'.js"}',h[o]=this.toJSON(b,n),m>0&&(k+=",")}else k+="{x:"+n.x.toFixed()+",y:"+n.y.toFixed()+",w:"+n.w.toFixed()+",h:"+n.h.toFixed()+",nodes:[",j+=1,f.push(m),d.push(l),l=n.nodes,m=n.nodes.length;else if(n.leaf){var p=n.leaf.toJSON?n.leaf.toJSON():JSON.stringify(n.leaf);k+="{x:"+n.x.toFixed()+",y:"+n.y.toFixed()+",w:"+n.w.toFixed()+",h:"+n.h.toFixed()+",leaf:"+p+"}",m>0&&(k+=",")}else n.load&&(k+="{x:"+n.x.toFixed()+",y:"+n.y.toFixed()+",w:"+n.w.toFixed()+",h:"+n.h.toFixed()+',load:"'+n.load+'"}',m>0&&(k+=","));m-=1}0>m&&(k+="]}",j-=1)}while(d.length>0);k+=";";for(var q in h)k+="\nvar "+q+" = function(){"+h[q]+" return(mainTree);};";return k},this.remove=function(a,b,c){var d,f,g;if("function"==typeof b&&(c=b,b=!1),b){if(!c)return h(a,b,e);c(null,h(a,b,e))}else{for(d=1,f=[];d>0;)g=h(a,b,e),d=g.length,f=f.concat(g);if(!c)return f;c(null,f)}},this.insert=function(a,b,c){var d,f;if(arguments.length<2)throw"Wrong number of arguments. RT.Insert requires at least a bounding rectangle and an object.";if(!c)return o({x:a.x,y:a.y,w:a.w,h:a.h,leaf:b},e)||!0;try{d=o({x:a.x,y:a.y,w:a.w,h:a.h,leaf:b},e)}catch(g){f=g}finally{c(f,d)}};var p=function(a,b){if(b&&b.bbox)return{leaf:b,x:b.bbox[0],y:b.bbox[1],w:b.bbox[2]-b.bbox[0],h:b.bbox[3]-b.bbox[1]};for(var c=a.length,d=0,e=new Array(c);c>d;)e[d]=[a[d][0],a[d][1]],d++;var f=e[0];c=e.length,d=1;for(var g={min:[].concat(f),max:[].concat(f)};c>d;)e[d][0]<g.min[0]?g.min[0]=e[d][0]:e[d][0]>g.max[0]&&(g.max[0]=e[d][0]),e[d][1]<g.min[1]?g.min[1]=e[d][1]:e[d][1]>g.max[1]&&(g.max[1]=e[d][1]),d++;var h={x:g.min[0],y:g.min[1],w:g.max[0]-g.min[0],h:g.max[1]-g.min[1]};return b&&(h.leaf=b),h},q={};q.point=function(a){return o({x:a.geometry.coordinates[0],y:a.geometry.coordinates[1],w:0,h:0,leaf:a},e)},q.multiPointLineString=function(a){return o(p(a.geometry.coordinates,a),e)},q.multiLineStringPolygon=function(a){return o(p(Array.prototype.concat.apply([],a.geometry.coordinates),a),e)},q.multiPolygon=function(a){return o(p(Array.prototype.concat.apply([],Array.prototype.concat.apply([],a.geometry.coordinates)),a),e)},q.makeRec=function(b){return new a.Rectangle(b.x,b.y,b.w,b.h)},q.geometryCollection=function(a){if(a.bbox)return o({leaf:a,x:a.bbox[0],y:a.bbox[1],w:a.bbox[2]-a.bbox[0],h:a.bbox[3]-a.bbox[1]},e);for(var b,c=a.geometry.geometries,d=0,f=c.length,g=[];f>d;){switch(b=c[d],b.type){case"Point":g.push(q.makeRec({x:b.coordinates[0],y:b.coordinates[1],w:0,h:0}));break;case"MultiPoint":g.push(q.makeRec(p(b.coordinates)));break;case"LineString":g.push(q.makeRec(p(b.coordinates)));break;case"MultiLineString":g.push(q.makeRec(p(Array.prototype.concat.apply([],b.coordinates))));break;case"Polygon":g.push(q.makeRec(p(Array.prototype.concat.apply([],b.coordinates))));break;case"MultiPolygon":g.push(q.makeRec(p(Array.prototype.concat.apply([],Array.prototype.concat.apply([],b.coordinates)))));break;case"GeometryCollection":c=c.concat(b.geometries),f=c.length}d++}var h=g[0];for(d=1,f=g.length;f>d;)h.expand(g[d]),d++;return o({leaf:a,x:h.x(),y:h.y(),h:h.h(),w:h.w()},e)},this.geoJSON=function(a,b){b=b||function(){return!0};var c,d;if(f(a))c=a.slice();else{if(!a.features||!f(a.features))throw"this isn't what we're looking for";c=a.features.slice()}for(var e=c.length,g=0;e>g;){if(d=c[g],"Feature"===d.type)switch(d.geometry.type){case"Point":q.point(d);break;case"MultiPoint":q.multiPointLineString(d);break;case"LineString":q.multiPointLineString(d);break;case"MultiLineString":q.multiLineStringPolygon(d);break;case"Polygon":q.multiLineStringPolygon(d);break;case"MultiPolygon":q.multiPolygon(d);break;case"GeometryCollection":q.geometryCollection(d)}g++}return b(null,!0)},this.bbox=function(){var a,b,c,d,e;switch(arguments.length){case 0:throw"not enough arguments";case 1:a=arguments[0][0][0],b=arguments[0][0][1],c=arguments[0][1][0],d=arguments[0][1][1];break;case 2:if("function"==typeof arguments[1]){a=arguments[0][0][0],b=arguments[0][0][1],c=arguments[0][1][0],d=arguments[0][1][1],e=arguments[1];break}a=arguments[0][0],b=arguments[0][1],c=arguments[1][0],d=arguments[1][1];break;case 3:a=arguments[0][0],b=arguments[0][1],c=arguments[1][0],d=arguments[1][1],e=arguments[2];break;case 4:a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3];break;case 5:a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3],e=arguments[4]}return e?(this.search({x:a,y:b,w:c-a,h:d-b},e),void 0):this.search({x:a,y:b,w:c-a,h:d-b})}},b=function(b,c){var d,e;if("function"==typeof b&&(c=b,b=void 0),!c)return new a(b);try{d=new a(b)}catch(f){e=f}finally{c(e,d)}};a.Rectangle=function(a,b,c,d){var e,f,g,h,i,j;a.x?(e=a.x,g=a.y,0!==a.w&&!a.w&&a.x2?(i=a.x2-a.x,j=a.y2-a.y):(i=a.w,j=a.h),f=e+i,h=g+j):(e=a,g=b,i=c,j=d,f=e+i,h=g+j),this.x1=this.x=function(){return e},this.y1=this.y=function(){return g},this.x2=function(){return f},this.y2=function(){return h},this.w=function(){return i},this.h=function(){return j},this.toJSON=function(){return'{"x":'+e.toString()+', "y":'+g.toString()+', "w":'+i.toString()+', "h":'+j.toString()+"}"},this.overlap=function(a){return this.x()<a.x2()&&this.x2()>a.x()&&this.y()<a.y2()&&this.y2()>a.y()},this.expand=function(a){var b=Math.min(this.x(),a.x()),c=Math.min(this.y(),a.y());return i=Math.max(this.x2(),a.x2())-b,j=Math.max(this.y2(),a.y2())-c,e=b,g=c,this},this.setRect=function(a,b,c,d){var e,f,g,h,i,j;a.x?(e=a.x,g=a.y,0!==a.w&&!a.w&&a.x2?(i=a.x2-a.x,j=a.y2-a.y):(i=a.w,j=a.h),f=e+i,h=g+j):(e=a,g=b,i=c,j=d,f=e+i,h=g+j)}},a.Rectangle.overlapRectangle=function(a,b){return 0===a.h&&0===a.w||0===b.h&&0===b.w?a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y:a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y},a.Rectangle.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y},a.Rectangle.expandRectangle=function(a,b){var c=Math.min(a.x,b.x),d=Math.min(a.y,b.y);return a.w=Math.max(a.x+a.w,b.x+b.w)-c,a.h=Math.max(a.y+a.h,b.y+b.h)-d,a.x=c,a.y=d,a},a.Rectangle.makeMBR=function(b,c){if(b.length<1)return{x:0,y:0,w:0,h:0};c?(c.x=b[0].x,c.y=b[0].y,c.w=b[0].w,c.h=b[0].h):c={x:b[0].x,y:b[0].y,w:b[0].w,h:b[0].h};for(var d=b.length-1;d>0;d--)a.Rectangle.expandRectangle(c,b[d]);return c},"undefined"!=typeof module&&module.exports?module.exports=b:"undefined"==typeof document?(self.rTree=b,self.RTree=a):(window.rTree=b,window.RTree=a)}(this);