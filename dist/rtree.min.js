!function(){"use strict";var a=function(b){var c=3,d=6;isNaN(b)||(c=Math.floor(b/2),d=b);var e={x:0,y:0,w:0,h:0,id:"root",nodes:[]},f=function(a){return Array.isArray?Array.isArray(a):"[object Array]"===Object.prototype.toString.call(a)};a.Rectangle.squarifiedRatio=function(a,b,c){var d=(a+b)/2,e=a*b,f=e/(d*d);return e*c/f};var g=function(a){for(var b,c=a.slice(),d=[];c.length;)b=c.pop(),b.nodes?c=c.concat(b.nodes):b.leaf&&d.push(b);return d},h=function(b,d,e){var f,h,i,j=[],k=[],l=[],m=1;if(!b||!a.Rectangle.overlapRectangle(b,e))return l;var p={x:b.x,y:b.y,w:b.w,h:b.h,target:d};for(k.push(e.nodes.length),j.push(e);j.length>0;){if(f=j.pop(),h=k.pop()-1,"target"in p)for(;h>=0;){if(i=f.nodes[h],a.Rectangle.overlapRectangle(p,i)){if(p.target&&"leaf"in i&&i.leaf===p.target||!p.target&&("leaf"in i||a.Rectangle.containsRectangle(i,p))){l="nodes"in i?g(f.nodes.splice(h,1)):f.nodes.splice(h,1),a.Rectangle.makeMBR(f.nodes,f),delete p.target;break}"nodes"in i&&(m++,k.push(h),j.push(f),f=i,h=i.nodes.length)}h--}else if("nodes"in p){f.nodes.splice(h+1,1),f.nodes.length>0&&a.Rectangle.makeMBR(f.nodes,f);for(var q=0;q<p.nodes.length;q++)o(p.nodes[q],f);p.nodes=[],0===j.length&&f.nodes.length<=1?(p.nodes=n(f,!0,p.nodes,f),f.nodes=[],j.push(f),k.push(1)):j.length>0&&f.nodes.length<c?(p.nodes=n(f,!0,p.nodes,f),f.nodes=[]):delete p.nodes}else a.Rectangle.makeMBR(f.nodes,f);m-=1}return l},i=function(b,c){var d,e=-1,f=[],g=!0;f.push(c);for(var h=c.nodes;g||-1!==e;){g?g=!1:(f.push(h[e]),h=h[e].nodes,e=-1);for(var i=h.length-1;i>=0;i--){var j=h[i];if("leaf"in j){e=-1;break}var k=a.Rectangle.squarifiedRatio(j.w,j.h,j.nodes.length+1),l=Math.max(j.x+j.w,b.x+b.w)-Math.min(j.x,b.x),m=Math.max(j.y+j.h,b.y+b.h)-Math.min(j.y,b.y),n=a.Rectangle.squarifiedRatio(l,m,j.nodes.length+2);(0>e||Math.abs(n-k)<d)&&(d=Math.abs(n-k),e=i)}}return f},j=function(a){for(var b=l(a);a.length>0;)k(a,b[0],b[1]);return b},k=function(b,d,e){for(var f,g,h,i=a.Rectangle.squarifiedRatio(d.w,d.h,d.nodes.length+1),j=a.Rectangle.squarifiedRatio(e.w,e.h,e.nodes.length+1),k=b.length-1;k>=0;k--){var l=b[k],m={};m.x=Math.min(d.x,l.x),m.y=Math.min(d.y,l.y),m.w=Math.max(d.x+d.w,l.x+l.w)-m.x,m.h=Math.max(d.y+d.h,l.y+l.h)-m.y;var n=Math.abs(a.Rectangle.squarifiedRatio(m.w,m.h,d.nodes.length+2)-i),o={};o.x=Math.min(e.x,l.x),o.y=Math.min(e.y,l.y),o.w=Math.max(e.x+e.w,l.x+l.w)-o.x,o.h=Math.max(e.y+e.h,l.y+l.h)-o.y;var p=Math.abs(a.Rectangle.squarifiedRatio(o.w,o.h,e.nodes.length+2)-j);(!g||!f||Math.abs(p-n)<f)&&(g=k,f=Math.abs(p-n),h=n>p?e:d)}var q=b.splice(g,1)[0];d.nodes.length+b.length+1<=c?(d.nodes.push(q),a.Rectangle.expandRectangle(d,q)):e.nodes.length+b.length+1<=c?(e.nodes.push(q),a.Rectangle.expandRectangle(e,q)):(h.nodes.push(q),a.Rectangle.expandRectangle(h,q))},l=function(a){for(var b,c,d=a.length-1,e=0,f=a.length-1,g=0,h=a.length-2;h>=0;h--){var i=a[h];i.x>a[e].x?e=h:i.x+i.w<a[d].x+a[d].w&&(d=h),i.y>a[g].y?g=h:i.y+i.h<a[f].y+a[f].h&&(f=h)}var j=Math.abs(a[d].x+a[d].w-a[e].x),k=Math.abs(a[f].y+a[f].h-a[g].y);return j>k?d>e?(b=a.splice(d,1)[0],c=a.splice(e,1)[0]):(c=a.splice(e,1)[0],b=a.splice(d,1)[0]):f>g?(b=a.splice(f,1)[0],c=a.splice(g,1)[0]):(c=a.splice(g,1)[0],b=a.splice(f,1)[0]),[{x:b.x,y:b.y,w:b.w,h:b.h,nodes:[b]},{x:c.x,y:c.y,w:c.w,h:c.h,nodes:[c]}]},m=function(a,b){return a.nodes=b.nodes,a.x=b.x,a.y=b.y,a.w=b.w,a.h=b.h,a},n=function(b,c,d,e){var f=[];if(!a.Rectangle.overlapRectangle(b,e))return d;for(f.push(e.nodes);f.length>0;)for(var g=f.pop(),h=g.length-1;h>=0;h--){var i=g[h];a.Rectangle.overlapRectangle(b,i)&&("nodes"in i?f.push(i.nodes):"leaf"in i&&(c?d.push(i):d.push(i.leaf)))}return d},o=function(b,c){var e;if(0===c.nodes.length)return c.x=b.x,c.y=b.y,c.w=b.w,c.h=b.h,c.nodes.push(b),void 0;for(var g,h=i(b,c),k=b;h.length>0;){if(e&&"nodes"in e&&0===e.nodes.length){g=e,e=h.pop();for(var l=0;l<e.nodes.length;l++)if(e.nodes[l]===g||0===e.nodes[l].nodes.length){e.nodes.splice(l,1);break}}else e=h.pop();if("leaf"in k||"nodes"in k||f(k)){if(f(k)){for(var m=0;m<k.length;m++)a.Rectangle.expandRectangle(e,k[m]);e.nodes=e.nodes.concat(k)}else a.Rectangle.expandRectangle(e,k),e.nodes.push(k);if(e.nodes.length<=d)k={x:e.x,y:e.y,w:e.w,h:e.h};else{var n=j(e.nodes);k=n,h.length<1&&(e.nodes.push(n[0]),h.push(e),k=n[1])}}else a.Rectangle.expandRectangle(e,k),k={x:e.x,y:e.y,w:e.w,h:e.h}}};this.getTree=function(){return e},this.setTree=function(a,b){return b||(b=e),m(b,a)},this.search=function(a,b,c,d){return"function"==typeof b?(d=b,b=!1,c=[]):"function"==typeof c&&(d=c,c=[]),c=c||[],d?(d(null,n(a,b,c,e)),void 0):n(a,b,c,e)};var p=function(a,b){for(var c,d=1,f=[];d>0;)c=h(a,!1,e),d=c.length,f=f.concat(c);return b?b(null,f):f},q=function(a,b,c){var d=h(a,b,e);return c?c(null,d):d};this.remove=function(a,b,c){return b&&"function"!=typeof b?q(a,b,c):p(a,b)},this.insert=function(a,b,c){var d=o({x:a.x,y:a.y,w:a.w,h:a.h,leaf:b},e);return c?c(null,d):d},this.toJSON=function(a,b){return b=b||function(a,b){return b},b(null,JSON.stringify(e))},a.fromJSON=function(b,c){c=c||function(a,b){return b};var d=new a;return d.setTree(JSON.parse(b)),c(null,d)};var r=function(a,b){if(b&&b.bbox)return{leaf:b,x:b.bbox[0],y:b.bbox[1],w:b.bbox[2]-b.bbox[0],h:b.bbox[3]-b.bbox[1]};for(var c=a.length,d=0,e=new Array(c);c>d;)e[d]=[a[d][0],a[d][1]],d++;var f=e[0];c=e.length,d=1;for(var g={min:[].concat(f),max:[].concat(f)};c>d;)e[d][0]<g.min[0]?g.min[0]=e[d][0]:e[d][0]>g.max[0]&&(g.max[0]=e[d][0]),e[d][1]<g.min[1]?g.min[1]=e[d][1]:e[d][1]>g.max[1]&&(g.max[1]=e[d][1]),d++;var h={x:g.min[0],y:g.min[1],w:g.max[0]-g.min[0],h:g.max[1]-g.min[1]};return b&&(h.leaf=b),h},s={};s.point=function(a){return o({x:a.geometry.coordinates[0],y:a.geometry.coordinates[1],w:0,h:0,leaf:a},e)},s.multiPointLineString=function(a){return o(r(a.geometry.coordinates,a),e)},s.multiLineStringPolygon=function(a){return o(r(Array.prototype.concat.apply([],a.geometry.coordinates),a),e)},s.multiPolygon=function(a){return o(r(Array.prototype.concat.apply([],Array.prototype.concat.apply([],a.geometry.coordinates)),a),e)},s.makeRec=function(b){return new a.Rectangle(b.x,b.y,b.w,b.h)},s.geometryCollection=function(a){if(a.bbox)return o({leaf:a,x:a.bbox[0],y:a.bbox[1],w:a.bbox[2]-a.bbox[0],h:a.bbox[3]-a.bbox[1]},e);for(var b,c=a.geometry.geometries,d=0,f=c.length,g=[];f>d;){switch(b=c[d],b.type){case"Point":g.push(s.makeRec({x:b.coordinates[0],y:b.coordinates[1],w:0,h:0}));break;case"MultiPoint":g.push(s.makeRec(r(b.coordinates)));break;case"LineString":g.push(s.makeRec(r(b.coordinates)));break;case"MultiLineString":g.push(s.makeRec(r(Array.prototype.concat.apply([],b.coordinates))));break;case"Polygon":g.push(s.makeRec(r(Array.prototype.concat.apply([],b.coordinates))));break;case"MultiPolygon":g.push(s.makeRec(r(Array.prototype.concat.apply([],Array.prototype.concat.apply([],b.coordinates)))));break;case"GeometryCollection":c=c.concat(b.geometries),f=c.length}d++}var h=g[0];for(d=1,f=g.length;f>d;)h.expand(g[d]),d++;return o({leaf:a,x:h.x(),y:h.y(),h:h.h(),w:h.w()},e)},this.geoJSON=function(a,b){b=b||function(){return!0};var c,d;if(f(a))c=a.slice();else{if(!a.features||!f(a.features))throw"this isn't what we're looking for";c=a.features.slice()}for(var e=c.length,g=0;e>g;){if(d=c[g],"Feature"===d.type)switch(d.geometry.type){case"Point":s.point(d);break;case"MultiPoint":s.multiPointLineString(d);break;case"LineString":s.multiPointLineString(d);break;case"MultiLineString":s.multiLineStringPolygon(d);break;case"Polygon":s.multiLineStringPolygon(d);break;case"MultiPolygon":s.multiPolygon(d);break;case"GeometryCollection":s.geometryCollection(d)}g++}return b(null,!0)},this.bbox=function(){var a,b,c,d,e;switch(arguments.length){case 0:throw"not enough arguments";case 1:a=arguments[0][0][0],b=arguments[0][0][1],c=arguments[0][1][0],d=arguments[0][1][1];break;case 2:if("function"==typeof arguments[1]){a=arguments[0][0][0],b=arguments[0][0][1],c=arguments[0][1][0],d=arguments[0][1][1],e=arguments[1];break}a=arguments[0][0],b=arguments[0][1],c=arguments[1][0],d=arguments[1][1];break;case 3:a=arguments[0][0],b=arguments[0][1],c=arguments[1][0],d=arguments[1][1],e=arguments[2];break;case 4:a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3];break;case 5:a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3],e=arguments[4]}return e?(this.search({x:a,y:b,w:c-a,h:d-b},e),void 0):this.search({x:a,y:b,w:c-a,h:d-b})}},b=function(b,c){var d,e;if("function"==typeof b&&(c=b,b=void 0),!c)return new a(b);try{d=new a(b)}catch(f){e=f}finally{c(e,d)}};a.Rectangle=function(a,b,c,d){var e,f,g;a.x?(c=a.w,d=a.h,b=a.y,0!==a.w&&!a.w&&a.x2?(c=a.x2-a.x,d=a.y2-a.y):(c=a.w,d=a.h),a=a.x,e=a+c,f=b+d,g=d+c?!1:!0):(e=a+c,f=b+d,g=d+c?!1:!0),this.x1=this.x=function(){return a},this.y1=this.y=function(){return b},this.x2=function(){return e},this.y2=function(){return f},this.w=function(){return c},this.h=function(){return d},this.p=function(){return g},this.overlap=function(c){return g||c.p()?a<=c.x2()&&e>=c.x()&&b<=c.y2()&&f>=c.y():a<c.x2()&&e>c.x()&&b<c.y2()&&f>c.y()},this.expand=function(g){var h,i,j=g.x(),k=g.y(),l=g.x2(),m=g.y2();return h=a>j?j:a,i=b>k?k:b,c=e>l?e-h:l-h,d=f>m?f-i:m-i,a=h,b=i,this}},a.Rectangle.overlapRectangle=function(a,b){return 0===a.h&&0===a.w||0===b.h&&0===b.w?a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y:a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y},a.Rectangle.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y},a.Rectangle.expandRectangle=function(a,b){var c,d,e=a.x+a.w,f=b.x+b.w,g=a.y+a.h,h=b.y+b.h;return c=a.x>b.x?b.x:a.x,d=a.y>b.y?b.y:a.y,a.w=e>f?e-c:f-c,a.h=g>h?g-d:h-d,a.x=c,a.y=d,a},a.Rectangle.makeMBR=function(b,c){if(!b.length)return{x:0,y:0,w:0,h:0};c=c||{},c.x=b[0].x,c.y=b[0].y,c.w=b[0].w,c.h=b[0].h;for(var d=1,e=b.length;e>d;d++)a.Rectangle.expandRectangle(c,b[d]);return c},"undefined"!=typeof module&&module.exports?module.exports=b:"undefined"==typeof document?(self.rTree=b,self.RTree=a):(window.rTree=b,window.RTree=a)}(this);